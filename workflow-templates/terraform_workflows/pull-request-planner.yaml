name: "Terraform PR Builder"

on:
  pull_request:
    branches:
      - master

jobs:
  plan:
    name: "Terraform Plans"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@master

      - name: "Setup Terraform"
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.13.2

      - name: "Path Filter"
        uses: dorny/paths-filter@v2.2.1
        id: filter
        with:
          filters: |
            sandbox:
              - 'sandbox/**/*'
            nonprod:
              - 'nonprod/**/*'

      - name: "Sandbox Root Module Init"
        if: steps.filter.outputs.sandbox == 'true'
        id: sandbox-init
        run: cd sandbox && terraform init -no-color
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: "Nonprod Root Module Init"
        if: steps.filter.outputs.nonprod == 'true'
        id: nonprod-init
        run: cd nonprod && terraform init -no-color
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: "Sandbox Root Module Validation"
        if: steps.filter.outputs.sandbox == 'true'
        id: sandbox-validation
        run: cd sandbox && terraform validate -no-color
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: "NonProd Root Module Validation"
        if: steps.filter.outputs.nonprod == 'true'
        id: nonprod-validation
        run: cd nonprod && terraform validate -no-color
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: "Sandbox Root Module Plan"
        if: steps.filter.outputs.sandbox == 'true'
        id: sandbox-plan
        run: cd sandbox && terraform plan -no-color
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: "NonProd Root Module Plan"
        if: steps.filter.outputs.nonprod == 'true'
        id: nonprod-plan
        run: cd nonprod && terraform plan -no-color
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: "Sandbox Plan Comment"
        if: steps.filter.outputs.sandbox == 'true'
        id: sandbox-plan-comment
        uses: actions/github-script@0.9.0
        env:
          TF_PLAN: "terraform\n${{ steps.sandbox-plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Sandbox Environment Terraform Plan \`
            #### Sandbox Environment Terraform Validation ðŸ¤–${{ steps.sandbox-validation.outputs.stdout }}
            #### Sandbox Environment Terraform Plan ðŸ“–\`${{ steps.sandbox-plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`${process.env.TF_PLAN}\`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Workflow: \`${{ github.workflow }}\`*`;
              
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: "NonProd Plan Comment"
        if: steps.filter.outputs.nonprod == 'true'
        id: nonprod-plan-comment
        uses: actions/github-script@0.9.0
        env:
          TF_PLAN: "terraform\n${{ steps.nonprod-plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### NonProd Environment Terraform Plan \`
            #### NonProd Environment Terraform Validation ðŸ¤–${{ steps.nonprod-validation.outputs.stdout }}
            #### NonProd Environment Terraform Plan ðŸ“–\`${{ steps.nonprod-plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`${process.env.TF_PLAN}\`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Workflow: \`${{ github.workflow }}\`*`;
              
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
